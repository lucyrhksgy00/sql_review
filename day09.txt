DML(Data Manipulation Language)
	SELECT
	INSERT
	UPDATE
	DELETE

DDL(Data Definition Language)
	데이터베이스의 테이블과 같은 데이터 구조, 구성요소 등을 생성, 삭제, 변경하는 명령어

	CREATE
		테이블생성
	
		CREATE TABLE 테이블명(
			컬럼명 데이터타입(크기) 제약조건1 제약조건2 ...,
			컬럼명 데이터타입(크기),
			...,
			CONSTRAINT 제약조건명 제약조건유형 (컬럼명),
			CONSTRAINT 제약조건명 제약조건유형 (컬럼명),
			...
		);

	ALTER
		테이블수정
	DROP
		테이블삭제
	TRUNCATE
		내용삭제
-------------------------------------------------------------------------------
ALTER
	ADD		컬럼추가
			ALTER TABLE 테이블명
			ADD 컬럼명 데이터타입(크기) [DEFAULT 값] [제약조건];

			제약조건추가
			ALTER TABLE 테이블명
			ADD CONSTRAINT 제약조건이름 제약조건유형;

	MODIFY	컬럼수정
			ALTER TABLE 테이블명
			MODIFY 컬럼명 데이터타입(크기) [DEFAULT 값] [제약조건];

			제약조건은 수정 불가

	DROP		컬럼삭제
			ALTER TABLE 테이블명
			DROP COLUMN 컬럼명;	
			*컬럼과 관련된 제약조건들도 모두 삭제

			제약조건삭제
			ALTER TABLE 테이블명
			DROP CONSTRAINT 제약조건이름;

	RENAME	이름수정
			1. 컬럼명 수정
				ALTER TABLE 테이블명
				RENAME COLUMN 컬럼명 TO 바꿀이름;
			2. 테이블명 수정
				ALTER TABLE 테이블명
				RENAME TO 바꿀이름;
			3. 제약조건명 수정 (잘 사용하지 않음)
				ALTER TABLE 테이블명
				RENAME CONSTRAINT 제약조건명 TO 바꿀이름;
	
	DISABLE : 제약조건 비활성화 (NOCHECK)
		ALTER TABLE 테이블명
		DISABLE CONSTRAINT 제약조건명;

	ENABLE : 제약조건 활성화 (CHECK)
		ALTER TABLE 테이블명
		ENABLE CONSTRAINT 계약조건명;
-------------------------------------------------------------------------------
TRUNCATE
	테이블 속의 내용(데이터)만 삭제
	TRUNCATE TABLE 테이블명;

DROP
	테이블 자체의 정의, 구조 모두 삭제
	DROP TABLE 테이블명;

CREATE 혹은 DROP 주의사항 : 외래키(FOREIGN KEY)
	CREATE 주의점
	A테이블을 만들면서 A라는 컬럼을 외래키로 설정하고자 한다면
	A라는 컬럼은 이미 만들어져 있어야 한다

	학번		이름		학과		등록금
	
-->	학번		이름		학과				학과		등록금


		DROP				TRUNCATE		DELETE
종류		DDL				DDL			DML
ROLLBACK	불가능			불가능		가능
삭제상태	정의까지 모두 삭제	초기 상태로 만듦	데이터만 삭제
-------------------------------------------------------------------------------
DCL(Data Control Language)
	데이터베이스에 접근하고, 객체들을 사용하도록 권한을 주거나 회수하는 명령어 

권한(Privilege)
	시스템권한
		데이터베이스 접속, 사용자(계정) 생성 및 삭제
	오브젝트권한 (이미 만들어진 테이블/뷰/...에 대한 권한)
		테이블, 뷰 등에 대한 삽입 삭제 수정 조회와 관련된 권한 

GRANT : 권한 부여
	GRANT 시스템권한 TO 사용자 [WITH ADMIN OPTION];
		WITH ADMIN OPTION을 쓰면 부여받은 권한을 다른 계정에게 부여할 수 있음
	GRANT 오브젝트권한 ON 테이블명 TO 사용자 [WITH ADMIN OPTION]; 

REVOKE : 권한 회수
	REVOKE 시스템권한 FROM 사용자;
	REVOKE 오브젝트권한 ON 테이블명 FROM 사용자;

권한 종류
	시스템권한
		CREATE SESSION : 데이터베이스 접속 권한
		CREATE USER : 사용자 생성 권한
		DROP USER : 사용자 삭제 권한
		CREATE TABLE :	테이블 생성 권한
					테이블 수정 권한 (ALTER)
				 	테이블 삭제 권한 (DROP)
		CREATE VIEW : 	뷰 생성 권한
				 	뷰 삭제 권한 (DROP)

	오브젝트권한
		SELECT
		INSERT
		UPDATE
		DELETE
	
계정 생성
	CREATE USER 사용자명 IDENTIFIED BY 비밀번호;

데이터베이스 접근권한부여
	GRANT CREATE SESSION TO 사용자;

-- TABLE SPACE가 부족하다고 나올 시
-- 계정에게 TABLE SPACE를 부여해야한다
	GRANT UNLIMITED TABLESPACE TO 계정;

역할(Role)
	사용자별로 다수의 권한을 부여하는 경우에는 역할로 묶어서 관리할 수 있다
	역할 생성
		CREATE ROLE 역할명;
		(ex) Consulting이라는 역할 생성
			CREATE SESSION (시스템권한 부여)
			SELECT (오브젝트권한 부여)			
	시스템권한부여
		GRANT 시스템권한 TO 역할명;
	오브젝트권한부여
		GRANT 오브젝트권한 ON 테이블 TO 역할명;
	계정에 역할 부여
		GRANT 역할 TO 사용자;
-------------------------------------------------------------------------------
계층형 질의
	계층형 데이터를 조회하기 위해 사용하는 쿼리문
계층형 데이터
	데이터 간의 순서(상/하 혹은 앞/뒤)의 개념이 포함된 데이터
	(ex) 회사 조직도 (사장, 부장, 사원) - 트리 구조 (순환 X)
	(ex) 지하철 노선도 (역삼역, 교대, 선릉) - 그래프 구조 (순환)

노드 : 각각의 데이터 (데이터의 단위)

루트노드 (뿌리)
	가장 최상위 데이터
리프/단말노드 (나뭇잎)
	자식이 존재하지 않는 데이터
형제노드 (가로)
	동일한 레벨에 존재하는 데이터
데이터전개
	데이터를 찾아간다 (데이터베이스에는 2차원으로 데이터가 저장되기 때문에)
	




















